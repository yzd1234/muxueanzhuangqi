name: 构建APK

on:
  push:
    tags:
      - 'v*' # 当有 v 开头的 tag 推送时触发
  workflow_dispatch: # 允许手动触发

jobs:
  build:
    name: 构建APK
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 运行环境

    steps:
      - name: 检出代码
        uses: actions/checkout@v4 # 拉取仓库代码

      - name: 设置JDK
        uses: actions/setup-java@v4 # 设置 Java 环境
        with:
          distribution: 'zulu' # 使用 Zulu 发行版
          java-version: '17' # 设置 Java 版本为 17

      - name: 设置Android SDK
        uses: android-actions/setup-android@v3 # 设置 Android SDK 环境

      - name: 设置Gradle
        uses: gradle/gradle-build-action@v2 # 设置 Gradle 环境，会自动缓存依赖

      - name: 授予Gradle执行权限
        run: chmod +x gradlew # 给 gradlew 脚本添加执行权限

      # 添加这个构建步骤！编译错误会在这里显示出来~
      - name: 构建APK (包含编译)
        run: ./gradlew assembleRelease

      # 这个步骤可以保留，用于查看更详细的构建过程信息，但编译错误主要看上一步
      - name: 生成日志 (可选，查看详细构建信息)
        run: ./gradlew --info

      - name: 上传构建产物
        uses: actions/upload-artifact@v4 # 上传构建好的 APK 文件作为产物
        with:
          name: MuXuanZhuangQi # 产物名称
          path: | # 上传路径匹配规则
            **/app-release*.apk
          if-no-files-found: error # 如果找不到文件则报错
          retention-days: 90 # 产物保留天数

      # ... existing code ...

      - name: 创建Release
        if: startsWith(github.ref, 'refs/tags/') # 仅在推送 tag 时执行
        uses: softprops/action-gh-release@v1 # 使用 action 创建 GitHub Release
        with:
          files: | # 要附加到 Release 的文件
            **/app-release*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 使用仓库自带的 GITHUB_TOKEN 进行认证
